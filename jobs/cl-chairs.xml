<?xml version="1.0"?>
<actions>
    <action type="bash" id="install_requests">
        <content>pip install requests</content>
    </action>
    
    <action type="python" id="fetch_craigslist" depends_on="install_requests">
        <content>
import requests
import re
import json  # Import the json module

def clean_text(text):
    return re.sub(r'\s+', ' ', text).strip()

def fetch_craigslist_data():
    base_url = f"https://portland.craigslist.org/search/sss" # sss is for sale
    params = {
        "query": "office chair",
    }

    try:
        response = requests.get(base_url, params=params, timeout=10) # Add timeout
        if response.status_code == 200:
            return response.text #return results for easier testing
        else:
            print(f"Failed to retrieve data. Status code: {response.status_code}")
            return []
    except requests.exceptions.RequestException as e:
        print(f"Request error: {e}")
        return []
    except Exception as e:
        print(f"General error: {e}")
        return []

print(fetch_craigslist_data())
</content>
    </action>

    <action type="reasoning" id="analyze_listings_1" model="google/gemini-2.0-flash-001" format="json" depends_on="fetch_craigslist">
        <content>
You are an office furniture expert analyzing Craigslist listings to identify the best deals on office chairs in Portland, Oregon.

Here are the Craigslist HTML listings. The listings will be in HTML format, so please use regex or other string parsing tools to find the titles, prices, and URLs. There will be multiple listings.

{{outputs.fetch_craigslist.raw_response}}

Analyze all provided listings to identify the best values based on condition, features, and price. Use your expertise to determine what makes a specific chair a worthy buy.
Highlight the top deals based on the information provided.

Capture and report on the following.

*   **Price vs. Quality:** Prioritize chairs based good overall quality per dollar, using reasonable assumptions based on the ads description.
*   **Features:** Focus on ergonomic adjustment options, build material, and overall design.
*   **Condition:** Factor in the description provided in the advertisement.

Output a JSON object with a "top_deals" array containing the best deals. For each deal, include the "title", "url", "price", and "reason" as keys. Also include a key containing the number of listings analyzed. If the total number of listings is zero provide an empty array.
</content>
    </action>

    <action type="reasoning" id="write_markdown_report_1" model="anthropic/claude-3.5-sonnet" depends_on="analyze_listings_1">
        <content>
You are an expert office furniture reviewer. Based on the following JSON data containing information about craigslist office chair deals, write a markdown report summarizing the best deals for people shopping in Portland, Oregon. Only provide the Markdown document, no surrounding text.

Include an introductory paragraph explaining the methodology used (e.g., analyzing Craigslist listings for price/quality).

For each of the top deals from the "top_deals" array, create a section with:

*   The title of the listing as a header.
*   A link to the Craigslist listing.
*   The price.
*   A detailed explanation of why this is a good deal, referencing specific features and their quality based on expert knowledge.

Conclude with any overall thoughts or warnings about buying used furniture.  Make sure the report is well-organized and easy to read.

Here is the JSON data:
{{outputs.analyze_listings_1.raw_response}}
</content>
    </action>

    <action type="python" id="save_report_1" depends_on="write_markdown_report_1">
        <content>
import datetime

try:
    report = outputs["write_markdown_report_1"]["raw_response"]
    timestamp = datetime.datetime.now().strftime("%Y-%m-%d_%H-%M-%S")
    filename = f"craigslist_office_chair_deals_{timestamp}.md"

    with open(filename, "w") as f:
        f.write(report)

    print(f"Report saved to {filename}")
except Exception as e:
    print(f"Error saving report: {e}")
</content>
    </action>
</actions>